
local Ruu = require "ruu.ruu"

local function getInput()
end

local function buttonPressed(self, btn, arg1)
	print("Button pressed", self, btn, arg1)
	self.ruu:setEnabled(btn, false)
end

local function enableAllButtons(self)
	self.ruu:setEnabled(self.ruu:get("button1"), true)
	self.ruu:setEnabled(self.ruu:get("button2"), true)
	self.ruu:setEnabled(self.ruu:get("button3"), true)
	self.ruu:setEnabled(self.ruu:get("button4"), true)
end

local function checkBoxPressed(self, btn)
	print("checkBoxPressed", btn.isChecked)
end

local function radioBtnPressed(self, btn, prop)
	print("radioButtonPressed", prop)
end

local function sliderPressed(self, btn)
	print("sliderPressed")
end

local function numberFieldConfirmed(self, btn, fieldName)
	print("input confirmed ", fieldName, btn.text)
	if not tonumber(btn.text) then
		print("reject input")
		return true
	end
end

local function numberFieldEdited(self, btn, fieldName)
	print("", btn.text, fieldName)
	if not tonumber(btn.text) then
		print("   invalid input")
	end
end

local function inputFieldConfirmed(self, btn, fieldName)
	print("input confirmed ", fieldName, btn.text)
end

local function inputFieldEditod(self, btn, fieldName)
	print("", btn.text, fieldName)
end

function init(self)
	self.ruu = Ruu(self, getInput)
	self.ruu:registerLayers({"", "foreground", "text"})
	msg.post(".", "acquire_input_focus")

	self.btn1 = self.ruu:Button("button1", buttonPressed):args(1)
	self.btn2 = self.ruu:Button("button2", buttonPressed):args(2)
	self.btn3 = self.ruu:Button("button3", buttonPressed):args(3)
	self.btn4 = self.ruu:Button("button4", buttonPressed):args(4)

	self.ruu:Button("reset button", enableAllButtons)

	local checkbox = self.ruu:ToggleButton("checkbox1", checkBoxPressed, true)

	local r1 = self.ruu:RadioButton("radio1", radioBtnPressed):args("alpha")
	local r2 = self.ruu:RadioButton("radio2", radioBtnPressed, true):args("beta")
	local r3 = self.ruu:RadioButton("radio3", radioBtnPressed):args("gamma")
	local r4 = self.ruu:RadioButton("radio4", radioBtnPressed):args("delta")
	local r5 = self.ruu:RadioButton("radio5", radioBtnPressed):args("epsilon")
	self.ruu:groupRadioButtons({"radio1", "radio2", "radio3", "radio4", "radio5"})

	self.ruu:mapNeighbors({ {r1}, {r2}, {r3, checkbox}, {r4}, {r5} })

	local slider1 = self.ruu:Slider("slider", sliderPressed, 0, 200)
	local slider2 = self.ruu:Slider("slider2", sliderPressed, 0.5, 200)
	local slider3 = self.ruu:Slider("slider3", sliderPressed, 1, 200-40)

	slider2.nudgeDist = 15

	self.ruu:mapNextPrev({ slider1, slider2, slider3 })

	local input1 = self.ruu:InputField("input1", numberFieldConfirmed, "0"):args("number"):onEdit(numberFieldEdited)
	local input2 = self.ruu:InputField("input2", inputFieldConfirmed, "text..."):args("text"):onEdit(inputFieldEditod)
	self.ruu:mapNextPrev({ input1, input2 })
end

function on_input(self, action_id, action)
	self.ruu:input(action_id, action)
end
